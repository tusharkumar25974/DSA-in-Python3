class Solution:
    def trap(self, height: List[int]) -> int:
        if len(height) == 0:
            return 0
        PMAX = [0]*len(height)
        SMAX = [0]*len(height)
        
        PMAX[0] = height[0]
        
        for i in range(1,len(height)):
            PMAX[i] = max(PMAX[i-1],height[i])
        
        
        SMAX[len(height)-1]= height[len(height)-1]
        
        for i in range(len(height)-2,-1,-1):
            SMAX[i] = max(SMAX[i+1],height[i])
        
        amount = 0
        
        for i in range(1,len(height)-1):   #last element doesn't hold
            if height[i] <= min(PMAX[i-1],SMAX[i+1]):
                
                amount += min(PMAX[i-1],SMAX[i+1])-height[i]
        return amount
'''        
        
        IndexError: list index out of range
    SMAX[i] = max(SMAX[i+1],prices[i])
Line 22 in maxProfit (Solution.py)
    ret = Solution().maxProfit(param_1)
Line 49 in _driver (Solution.py)
    _driver()
Line 60 in <module> (Solution.py)
'''        
    
        
        
