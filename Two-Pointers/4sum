class Solution:
    def fourSum(self, nums: List[int], target: int) -> List[List[int]]:
        nums = sorted(nums)
        out = []
        for i in range(len(nums)):
            #print(i)
            if i>0 and nums[i]==nums[i-1]:   #uniqueness of a 
                continue
            else:
                
                for j in range(i+1,len(nums)):
                    print(j)
                    if j>i+1 and nums[j]==nums[j-1]:   #uniqueness of b
                        continue
                    else:



                        rem = target-1*(nums[i]+nums[j])
                        #print(rem)
                        p1 = j+1
                        p2 = len(nums)-1

                        while p1<p2:  #equal to or not
                            if nums[p1]+nums[p2]<rem:
                                p1+=1
                                #print(p1)
                            elif nums[p1]+nums[p2]>rem:
                                p2-=1
                            else:
                                #print("hello")
                                arr = [] #declaring it locally
                                arr.append(nums[i])
                                arr.append(nums[j])
                                arr.append(nums[p1])
                                arr.append(nums[p2])

                                out.append(arr)
                                #print(out)
                                if nums[p1]==nums[p2]:
                                    break #resulting in nothing new 2*nums[p1] = nums[i] and useless
                                else:
                                    x = nums[p1]
                                    y = nums[p2]
                                    while nums[p1]==x:
                                        p1+=1
                                    while nums[p2]==y:
                                        p2-=1
        return out
                                
                        
        
        
                
                
        
        
