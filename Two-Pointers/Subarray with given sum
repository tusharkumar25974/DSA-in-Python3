#User function Template for python3

#Function to find a continuous sub-array which adds up to a given number.
class Solution:
    def subArraySum(self,arr, n, s): 
        #Your code here
        i = 0
        j = 0
        curr = arr[0]
        while j<n:
            if curr<s:
                j+=1
                if j<n:
                    curr+=arr[j]
                
            elif curr>s:
                curr-=arr[i]
                i+=1
                if i>j:
                    j+=1
                    if j<n:    #dono i and j ending pe naa ho
                        curr = arr[j]   #equal to that element itself
            else:
                x = i+1
                y = j+1
                out = []
                out.append(x)
                out.append(y)
                return out
        #return -1
        return [-1]  #returning -1 was giving error as that cannot be iterated over, it can only be some iterable                

#{ 
#  Driver Code Starts
#Initial Template for Python 3

import math

def main():
        T=int(input())
        while(T>0):
            
            NS=input().strip().split()
            N=int(NS[0])
            S=int(NS[1])
            
            A=list(map(int,input().split()))
            ob=Solution()
            ans=ob.subArraySum(A, N, S)
            
            for i in ans:
                print(i, end=" ")
                
            print()
            
            T-=1


if __name__ == "__main__":
    main()
# } Driver Code Ends
